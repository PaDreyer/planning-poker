name: Build release

on:
  push:
    tags:
      - "v*.*.*"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Generate build timestamp
        run: echo "BUILD_TIMESTAMP=$(date --utc --iso-8601='seconds')" >> $GITHUB_ENV

      - name: Export package version
        run: echo "NPM_PACKAGE_VERSION_CUSTOM=$(node -p "require('./package.json').version")" >> $GITHUB_ENV

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: |
            ghcr.io/PaDreyer/planning-poker
          tags: |
            type=semver,pattern={{version}}
          # type=semver,pattern={{major}}.{{minor}}
          # type=semver,pattern={{major}}
          # type=semver,pattern={{date}}
          # type=raw,value=${{ github.sha }}
          # type=raw,value=${{ env.BUILD_TIMESTAMP }}

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18.x'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Build application
        run: yarn build

      - name: Bundle nodejs files
        run: zip -r nodejs-bundle packages/backend/build

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}

      - name: Build binaries
        run: yarn binary

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            build/planning-poker-linux-x64
            build/planning-poker-linux-arm64
            build/planning-poker-macos-arm64
            build/planning-poker-win-x64.exe
            nodejs-bundle.zip
